name: Build and Test pipeline

on:
  workflow_call:
    inputs:
      runs-on:
        type: "string"
        required: true
      cargo-flags:
        type: "string"
        required: false
        default: ""

jobs:
  build:
    name: Build runtime
    runs-on: ${{ inputs.runs-on }}
    steps:
    - name: Install Ubuntu dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt install -yqq ninja-build libtbb-dev spirv-tools libvulkan-dev
        curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 15
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-11 15
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-11 15
        wget -P /tmp/ https://github.com/mozilla/sccache/releases/download/v0.3.0/sccache-v0.3.0-x86_64-unknown-linux-musl.tar.gz
        tar -xvf /tmp/sccache-v0.3.0-x86_64-unknown-linux-musl.tar.gz -C /tmp/
        sudo install /tmp/sccache /usr/bin/sccache
    - name: Install dependencies (macOS)
      if: ${{ runner.os == 'macOS' }}
      run: |
        brew install sccache ninja tbb ncurses
        curl -LsSf https://get.nexte.st/latest/mac | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache build artifacts
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/cache
        key: ${{ runner.os }}-build-${{ github.sha }}
        restore-keys: ${{ runner.os }}-build-
    - name: Build
      env:
        RUSTC_WRAPPER: sccache
        SCCACHE_DIR: ${{ github.workspace }}/cache
      run: cargo build --workspace -vv
    - name: Runtime smoke test
      run: cargo nextest run --all
